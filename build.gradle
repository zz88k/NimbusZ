plugins
{
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base
{
	archivesName = project.archives_base_name
}

repositories
{
	mavenCentral()
	maven { url = 'https://maven.minecraftforge.net/' }
	maven { url = "https://maven.glitchfiend.com" }
}

fabricApi
{
	configureDataGeneration
	{
		client = true
	}
}

dependencies
{
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	"org.parchmentmc.data:parchment-1.21.1:2024.11.17@zip"
	modImplementation 'com.github.glitchfiend:TerraBlender-fabric:1.21.1-4.1.0.8'
	modImplementation 'com.electronwill.night-config:toml:3.6.0'
	modImplementation 'com.electronwill.night-config:core:3.6.0'
}

processResources
{
	inputs.property "version", project.version

	filesMatching("fabric.mod.json")
	{
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach
{
	it.options.release = 21
}

java
{
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar
{
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE")
	{
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

publishing
{
	publications
	{
		create("mavenJava", MavenPublication)
		{
			artifactId = project.archives_base_name
			from components.java
		}
	}

	repositories
	{

	}
}
